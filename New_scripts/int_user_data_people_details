-- # frequency: daily
-- # ddl: int_user_data/migrations/int_user_data_people_details
-- # maintainer: Michael 'The Great' Wiggins <michael.wiggins@rover.com>
-- # wlm_query_slot_count: 1
-- # requires:
-- #  ../high_priority.sql
-- #  ../standard_reports.people.sql
-- #  ../standard_reports.sitter_intent.sql
-- #  ../standard_reports.service_activated_to_matriculated.sql
-- #  ../standard_reports.services.sql
-- #  ../standard_reports.b_stays.sql
-- #  ../standard_reports.sitter_searchable_to_activated.sql
-- #  ../marketing.marketing_source.sql
-- #  ../marketing.promos.sql
-- #  ../analysts.eventstream_web_utm_parsing_from_current_url.sql


BEGIN TRANSACTION
;

CREATE TABLE analysts.int_user_data_people_details_staging (like analysts.int_user_data_people_details)
SORTKEY(id) 
AS

  SELECT
    people_person.id AS id,
    people_person.user_id AS user_id,
    people_person.added AS added,
    CASE WHEN people_person.sitter_intent = 0 AND people_person.sitter_intent_at IS NOT NULL THEN 1 ELSE people_person.sitter_intent END AS sitter_intent,
    CASE WHEN people_person.sitter_intent_at IS NULL AND people_person.sitter_intent = 1 THEN people_person.added ELSE people_person.sitter_intent_at END AS sitter_intent_at,
    people_person.description AS description,
    people_person.response_time AS response_time,
    people_person.ratings_average AS ratings_average,
    people_person.response_percent AS response_percent,
    people_person.ratings_count AS ratings_count,
    people_person.deactivated_at AS deactivated_at,
    auth_user.username AS username,
    auth_user.first_name AS first_name,
    auth_user.last_name AS last_name,
    people_person.gender AS gender,
    auth_user.email AS email,
    budget_group,
    channel,
    CASE WHEN sitter_intent = 0 THEN '' ELSE CONCAT(CONCAT('https://www.rover.com/members/', people_person.slug),'/') END AS sitter_web_profile_link,
    CONCAT('https://www.rover.com/admin/people/person/?id=',people_person.id) AS admin_profile_link
  FROM
    roverdb.people_person
  LEFT JOIN
    roverdb.auth_user
  ON
    (people_person.user_id = auth_user.id)
  LEFT JOIN
    marketing.marketing_source
  ON
    (marketing_source.person_id = people_person.id)
    
;

DROP TABLE IF EXISTS analysts.int_user_data_people_details CASCADE
;

ALTER TABLE analysts.int_user_data_people_details_staging
RENAME TO analysts.int_user_data_people_details
;


COMMIT
;
